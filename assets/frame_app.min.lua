BATTERY_LEVEL_FLAG=0x0c;TEXT_FLAG=0x0a;local a={}local b={}local c={}function update_app_data_accum(d)local e=string.byte(d,1)local f=a[e]if f==nil or next(f)==nil then f={chunk_table={},num_chunks=0,size=0,recv_bytes=0}a[e]=f end;if f.num_chunks==0 then f.size=string.byte(d,2)<<8|string.byte(d,3)f.chunk_table[1]=string.sub(d,4)f.num_chunks=1;f.recv_bytes=string.len(d)-3;if f.recv_bytes==f.size then b[e]=f.chunk_table[1]f.size=0;f.recv_bytes=0;f.num_chunks=0;f.chunk_table[1]=nil;a[e]=f end else f.chunk_table[f.num_chunks+1]=string.sub(d,2)f.num_chunks=f.num_chunks+1;f.recv_bytes=f.recv_bytes+string.len(d)-1;if f.recv_bytes==f.size then b[e]=table.concat(f.chunk_table)for g,h in pairs(f.chunk_table)do f.chunk_table[g]=nil end;f.size=0;f.recv_bytes=0;f.num_chunks=0;a[e]=f end end end;function parse_text(d)local i={}i.data=d;return i end;local j={}j[TEXT_FLAG]=parse_text;function process_raw_items()local k=0;for l,m in pairs(b)do c[l]=j[l](m)b[l]=nil;k=k+1 end;return k end;function print_text()local n=0;for o in c[TEXT_FLAG].data:gmatch("([^\n]*)\n?")do if o~=""then frame.display.text(o,1,n*60+1)n=n+1 end end end;function app_loop()local p=0;while true do rc,err=pcall(function()local q=process_raw_items()frame.sleep(0.005)if q>0 then if c[TEXT_FLAG]~=nil and c[TEXT_FLAG].data~=nil then print_text()end;frame.display.show()end;frame.sleep(0.005)local r=frame.time.utc()if p==0 or r-p>180 then pcall(frame.bluetooth.send,string.char(BATTERY_LEVEL_FLAG)..string.char(math.floor(frame.battery_level())))p=r end end)if rc==false then print(err)frame.display.text(" ",1,1)frame.display.show()frame.sleep(0.04)break end end end;frame.bluetooth.receive_callback(update_app_data_accum)app_loop()